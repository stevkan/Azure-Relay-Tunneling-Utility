name: Release - Hybrid Connection

on:
  push:
    tags:
      - 'hybrid-v*'  # Triggers on tags like hybrid-v1.5.2, hybrid-v2.0.0, etc.

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: Win-x64
            rid: win-x64
          - os: ubuntu-latest
            platform: Linux-x64
            rid: linux-x64
          - os: macos-latest
            platform: macOS-x64
            rid: osx-x64
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for release notes
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore dependencies
        run: dotnet restore Src/RelayTunnelUsingHybridConnection/RelayTunnelUsingHybridConnection.csproj
      
      - name: Build project
        run: dotnet build Src/RelayTunnelUsingHybridConnection/RelayTunnelUsingHybridConnection.csproj --configuration Release --no-restore
      
      - name: Publish project
        run: dotnet publish Src/RelayTunnelUsingHybridConnection/RelayTunnelUsingHybridConnection.csproj --configuration Release --runtime ${{ matrix.rid }} --self-contained false --output ./publish
      
      - name: Install Gitleaks (Secret Scanner) - Windows
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_windows_x64.zip" -OutFile gitleaks.zip
          Expand-Archive -Path gitleaks.zip -DestinationPath ./gitleaks
      
      - name: Install Gitleaks (Secret Scanner) - Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz
          tar -xzf gitleaks_8.18.0_linux_x64.tar.gz
          chmod +x gitleaks
      
      - name: Install Gitleaks (Secret Scanner) - macOS
        if: matrix.os == 'macos-latest'
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_darwin_x64.tar.gz
          tar -xzf gitleaks_8.18.0_darwin_x64.tar.gz
          chmod +x gitleaks
      
      - name: Scan for secrets in build output - Windows
        if: matrix.os == 'windows-latest'
        run: |
          ./gitleaks/gitleaks.exe detect --source ./publish --verbose --no-git
        continue-on-error: false
      
      - name: Scan for secrets in build output - Linux/macOS
        if: matrix.os != 'windows-latest'
        run: |
          ./gitleaks detect --source ./publish --verbose --no-git
        continue-on-error: false
      
      - name: Get version from tag
        id: get_version
        run: |
          tag="${{ github.ref_name }}"
          version="${tag#hybrid-v}"
          echo "VERSION=v$version" >> $GITHUB_OUTPUT
          echo "TAG=$tag" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Create ZIP archive - Windows
        if: matrix.os == 'windows-latest'
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          Compress-Archive -Path ./publish/* -DestinationPath "AzureRelayTunnelingUtility-HC-$version-${{ matrix.platform }}.zip"
        shell: pwsh
      
      - name: Create ZIP archive - Linux/macOS
        if: matrix.os != 'windows-latest'
        run: |
          version="${{ steps.get_version.outputs.VERSION }}"
          cd publish && zip -r "../AzureRelayTunnelingUtility-HC-$version-${{ matrix.platform }}.zip" *
        shell: bash
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform }}
          path: AzureRelayTunnelingUtility-HC-${{ steps.get_version.outputs.VERSION }}-${{ matrix.platform }}.zip
  
  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version from tag
        id: get_version
        run: |
          tag="${{ github.ref_name }}"
          version="${tag#hybrid-v}"
          echo "VERSION=v$version" >> $GITHUB_OUTPUT
          echo "TAG=$tag" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Generate release notes
        id: release_notes
        run: |
          version="${{ steps.get_version.outputs.VERSION }}"
          tag="${{ steps.get_version.outputs.TAG }}"
          
          notes="**Azure Relay Hybrid Connections (.NET 8)**\n\n"
          notes+="**Multi-Platform Support:**\n"
          notes+="- Windows (x64)\n"
          notes+="- Linux (x64)\n"
          notes+="- macOS (x64)\n\n"
          notes+="Download the appropriate zip for your platform below, extract, rename \`appsettings-template.json\` to \`appsettings.json\`, and configure.\n\n"
          notes+="ðŸ“– [Documentation](https://github.com/${{ github.repository }}/tree/main/Src/RelayTunnelUsingHybridConnection)\n\n"
          notes+="<details>\n<summary>What's Changed</summary>\n\n"
          notes+="See [full changelog](https://github.com/${{ github.repository }}/commits/$tag)\n\n"
          notes+="</details>"
          
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo -e "$notes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/release-*/*.zip
          body: ${{ steps.release_notes.outputs.NOTES }}
          draft: false
          prerelease: false
          name: "Relay Tunnel Using Hybrid Connection ${{ steps.get_version.outputs.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
